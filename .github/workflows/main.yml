name: Terraform

on: 
  push:
    branches: 
    - main
  pull_request:
  
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
          
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Find all Terraform directories
        id: tf_dirs
        run: |
          echo "::set-output name=dirs::$(find . -type f -name "*.tf" -exec dirname {} \; | sort -u)"
      
      - name: Terraform Init
        run: |
          for dir in ${{ steps.tf_dirs.outputs.dirs }}; do
            echo "Running terraform init in $dir"
            (cd "$dir" && terraform init)
          done

      - name: Terraform Validate
        run: |
          for dir in ${{ steps.tf_dirs.outputs.dirs }}; do
            echo "Running terraform validate in $dir"
            (cd "$dir" && terraform validate)
          done
        
      - name: Install TFlint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: TFlint
        run: |
          for dir in ${{ steps.tf_dirs.outputs.dirs }}; do
            echo "Running tflint in $dir"
            (cd "$dir" && tflint)
          done
      
      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
      
      - name: tfSec
        run: |
          for dir in ${{ steps.tf_dirs.outputs.dirs }}; do
            echo "Running tfsec in $dir"
            (cd "$dir" && tfsec)
          done
      
      - name: Terraform Plan
        run: |
          for dir in ${{ steps.tf_dirs.outputs.dirs }}; do
            echo "Running terraform plan in $dir"
            (cd "$dir" && terraform plan)
          done

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          for dir in ${{ steps.tf_dirs.outputs.dirs }}; do
            echo "Running terraform apply in $dir"
            (cd "$dir" && terraform apply -auto-approve)
          done
